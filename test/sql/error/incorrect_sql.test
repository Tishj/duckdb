# name: test/sql/error/incorrect_sql.test
# description: Test various incorrect SQL strings
# group: [error]

# typo
statement error
SELEC 42;
----
Parser Error: syntax error at or near "SELEC"
LINE 1: SELEC 42;
        ^

statement error
SELEC 42, 'thisisareallylongstringloremipsumblablathisisareallylongstringloremipsumblablalthisisareallylongstringloremipsumblablalthisisareallylongstringloremipsumblablal';
----
Parser Error: syntax error at or near "SELEC"
LINE 1: SELEC 42, 'thisisareallylongstringlorem...
        ^

statement error
SELEC 42, '🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆';
----
Parser Error: syntax error at or near "SELEC"
LINE 1: SELEC 42, '🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆...
        ^

# unrecognized column
statement error
SELECT '🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆', x, '🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆';
----
Binder Error: Referenced column "x" not found in FROM clause!
LINE 1: ...🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆', x, '🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆...
                                                  ^

# unrecognized scalar function
statement error
SELECT FUNFUNFUN();
----
Catalog Error: Scalar Function with name funfunfun does not exist!
Did you mean "unbin"?
LINE 1: SELECT FUNFUNFUN();
               ^

statement error
CREATE VIEW v1
AS SELECT FUNFUNFUN();
----
Catalog Error: Scalar Function with name funfunfun does not exist!
Did you mean "unbin"?

# unrecognized aggregate parameters
statement error
SELECT SUM(42, 84, 11, 'hello')
----
Binder Error: No function matches the given name and argument types 'sum(INTEGER, INTEGER, INTEGER, VARCHAR)'. You might need to add explicit type casts.
	Candidate functions:
	sum(DECIMAL) -> DECIMAL
	sum(SMALLINT) -> HUGEINT
	sum(INTEGER) -> HUGEINT
	sum(BIGINT) -> HUGEINT
	sum(HUGEINT) -> HUGEINT
	sum(DOUBLE) -> DOUBLE

# no matching function
statement error
SELECT cos(0, 1, 2, 3);
----
Binder Error: No function matches the given name and argument types 'cos(INTEGER, INTEGER, INTEGER, INTEGER)'. You might need to add explicit type casts.
	Candidate functions:
	cos(DOUBLE) -> DOUBLE

# unrecognized table function
statement error
SELECT * FROM RANG();
----
Catalog Error: Table Function with name rang does not exist!
Did you mean "range"?
LINE 1: SELECT * FROM RANG();
                      ^

# unknown named parameters
statement error
SELECT * FROM RANGE(1, hello=3);
----
Binder Error: Invalid named parameter "hello" for function range
Function does not accept any named parameters.
LINE 1: SELECT * FROM RANGE(1, hello=3);
                      ^

statement error
SELECT * FROM READ_CSV('x', hello=3);
----
Binder Error: Invalid named parameter "hello" for function read_csv
Candidates:
    hive_types_autocast BOOLEAN
    hive_types ANY
    union_by_name BOOLEAN
    filename BOOLEAN
    dtypes ANY
    null_padding BOOLEAN
    parallel BOOLEAN
    decimal_separator VARCHAR
    buffer_size UBIGINT
    columns ANY
    rejects_limit BIGINT
    names VARCHAR[]
    compression VARCHAR
    ignore_errors BOOLEAN
    quote VARCHAR
    max_line_size VARCHAR
    types ANY
    skip BIGINT
    column_types ANY
    rejects_table VARCHAR
    normalize_names BOOLEAN
    all_varchar BOOLEAN
    nullstr VARCHAR
    auto_type_candidates ANY
    sample_size BIGINT
    auto_detect BOOLEAN
    timestampformat VARCHAR
    new_line VARCHAR
    maximum_line_size VARCHAR
    allow_quoted_nulls BOOLEAN
    escape VARCHAR
    header BOOLEAN
    hive_partitioning BOOLEAN
    sep VARCHAR
    rejects_recovery_columns VARCHAR[]
    column_names VARCHAR[]
    dateformat VARCHAR
    delim VARCHAR

# multiple where clauses
statement error
SELECT 42 WHERE 1=1 WHERE 1=0;
----
PLACEHOLDER_ERROR_MESSAGE3084

# multiple statements without semi colon
statement error
SELECT 42
SELECT 42;
----
PLACEHOLDER_ERROR_MESSAGE3083

# multiple statements, but error is only in second statement
statement error
SELECT 42; SELEC 42;
----
PLACEHOLDER_ERROR_MESSAGE3082

# non-existent table
statement error
SELECT * FROM integers2;
----
PLACEHOLDER_ERROR_MESSAGE3081

# non-existent schema
statement error
SELECT * FROM bla.integers2;
----
PLACEHOLDER_ERROR_MESSAGE3080

# non-existent table in view
statement error
CREATE VIEW v1 AS SELECT * FROM integers2;
----
PLACEHOLDER_ERROR_MESSAGE3079

# non-existent table in long single-line query
statement error
with cte1 as (select 42 as j), cte2 as (select ref.j as k from cte1 as ref), cte3 as (select ref2.j+1 as i from cte1 as ref2) SELECT * FROM integers9;
----
PLACEHOLDER_ERROR_MESSAGE3078

statement error
with cte1 as (select 42 as j), cte2 as (select ref.j as k from cte1 as ref), cte3 as (select ref2.j+1 as i from cte1 as ref2) SELECT * FROM integers9 where x=3 order by x+1+1+1+1+1+1+1+1+1+1+1;
----
PLACEHOLDER_ERROR_MESSAGE3077

# non-existent table in multi-line query (Q1)
statement error
SELECT
    l_returnflag,
    l_linestatus,
    sum(l_quantity) AS sum_qty,
    sum(l_extendedprice) AS sum_base_price,
    sum(l_extendedprice * (1 - l_discount)) AS sum_disc_price,
    sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) AS sum_charge,
    avg(l_quantity) AS avg_qty,
    avg(l_extendedprice) AS avg_price,
    avg(l_discount) AS avg_disc,
    count(*) AS count_order
FROM
    lineitem
WHERE
    l_shipdate <= CAST('1998-09-02' AS date)
GROUP BY
    l_returnflag,
    l_linestatus
ORDER BY
    l_returnflag,
    l_linestatus;
----
PLACEHOLDER_ERROR_MESSAGE3076

# now with unicode
# short unicode error
statement error
select 🦆🍞 from 🦆🍞;
----
PLACEHOLDER_ERROR_MESSAGE3075

# long unicode error
statement error
with 🍞🍞 as (select 'bread' as 🍞), 🦆🦆 as (select ref.🍞 as "🍞" from 🍞🍞 as ref) SELECT * FROM integers9 where x LIKE '🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆🦆' order by x+1+1+1+1+1+1+1+1+1+1+1;
----
PLACEHOLDER_ERROR_MESSAGE3074

statement ok
CREATE TABLE integers(integ INTEGER);

statement ok
CREATE TABLE strings(str VARCHAR);

statement ok
CREATE TABLE chickens(feather INTEGER, beak INTEGER);

# non-existent table, with several tables available
statement error
SELECT * FROM integres;
----
PLACEHOLDER_ERROR_MESSAGE3073

# non-existent column
statement error
SELECT feathe FROM chickens;
----
PLACEHOLDER_ERROR_MESSAGE3072

# non-existent column, with multiple tables
statement error
SELECT feathe FROM chickens, integers, strings;
----
PLACEHOLDER_ERROR_MESSAGE3071

statement error
SELECT st FROM chickens, integers, strings;
----
PLACEHOLDER_ERROR_MESSAGE3070

statement error
SELECT chicken.feather FROM chickens
----
PLACEHOLDER_ERROR_MESSAGE3069

# table-qualified non-existent column
statement error
SELECT chicken.st FROM chickens, integers, strings;
----
PLACEHOLDER_ERROR_MESSAGE3068

# now with unicode
statement ok
CREATE TABLE 🦆🍞(🦆🦆🦆 INTEGER, 🍞🍞🍞 INTEGER);

statement error
SELECT 🦆.🦆🦆🦆 FROM 🦆🍞
----
PLACEHOLDER_ERROR_MESSAGE3067

statement error
SELECT 🦆🦆 FROM 🦆🍞, chickens
----
PLACEHOLDER_ERROR_MESSAGE3066

# name: test/sql/constraints/check/test_check.test
# description: CHECK constraint
# group: [check]

statement ok
CREATE TABLE integers(i INTEGER CHECK(i < 5))

statement ok
INSERT INTO integers VALUES (3)

statement error
INSERT INTO integers VALUES (7)
----
Constraint Error: CHECK constraint failed: integers

statement ok
INSERT INTO integers VALUES (NULL)

query I
SELECT * FROM integers
----
3
NULL

statement ok
DROP TABLE integers;

statement ok
CREATE TABLE integers(i INTEGER CHECK(i + j < 10), j INTEGER)

statement ok
INSERT INTO integers VALUES (3, 3)

statement error
INSERT INTO integers VALUES (5, 5)
----
Constraint Error: CHECK constraint failed: integers

statement error
INSERT INTO integers VALUES (3, 3), (5, 5)
----
Constraint Error: CHECK constraint failed: integers

query II
SELECT * FROM integers
----
3	3

statement error
CREATE TABLE indirect_subq(
	i INTEGER,
	CHECK (i > (2 * (SELECT(1))))
);
----
Parser Error: subqueries prohibited in CHECK constraints

statement error
CREATE TABLE integers2(i INTEGER CHECK(i > (SELECT 42)), j INTEGER)
----
Parser Error: subqueries prohibited in CHECK constraints

statement error
CREATE TABLE integers2(i INTEGER CHECK(i > SUM(j)), j INTEGER)
----
Binder Error: aggregate functions are not allowed in check constraints

statement error
CREATE TABLE integers3(i INTEGER CHECK(k < 10), j INTEGER)
----
Binder Error: Table does not contain column k referenced in check constraint!

statement error
CREATE TABLE integers3(i INTEGER CHECK(integers3.k < 10), j INTEGER)
----
Binder Error: Table does not contain column k referenced in check constraint!

statement error
CREATE TABLE integers3(i INTEGER CHECK(integers2.i < 10), j INTEGER)
----
Binder Error: Cannot extract field 'integers2' from expression "#0" because it is not a struct or a union

statement ok
CREATE TABLE integers4(i INTEGER CHECK(integers4.i < 10), j INTEGER)

# name: test/sql/function/numeric/test_unary.test
# description: Test unary operators
# group: [numeric]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE test(i INTEGER)

statement ok
INSERT INTO test VALUES (2)

query I
SELECT ++-++-+i FROM test
----
2

# test simple unary operators
query I
SELECT +i FROM test
----
2

query I
SELECT -i FROM test
----
-2

# we can also stack unary functions
query I
SELECT +++++++i FROM test
----
2

query I
SELECT ++-++-+i FROM test
----
2

query I
SELECT -+-+-+-+-i FROM test
----
-2

# Test negation of minima
statement ok
CREATE TABLE minima (t TINYINT, s SMALLINT, i INTEGER, b BIGINT);

statement ok
INSERT INTO minima VALUES (-128, -32768, -2147483648, -9223372036854775808);

statement error
SELECT -t from minima;
----
Out of Range Error: Overflow in negation of integer!

statement error
SELECT -s from minima;
----
Out of Range Error: Overflow in negation of integer!

statement error
SELECT -i from minima;
----
Out of Range Error: Overflow in negation of integer!

statement error
SELECT -b from minima;
----
Out of Range Error: Overflow in negation of integer!

# cannot apply these to a string
statement error
SELECT +'hello'
----
Binder Error: No function matches the given name and argument types '+(VARCHAR)'. You might need to add explicit type casts.
	Candidate functions:
	+(TINYINT) -> TINYINT
	+(TINYINT, TINYINT) -> TINYINT
	+(SMALLINT) -> SMALLINT
	+(SMALLINT, SMALLINT) -> SMALLINT
	+(INTEGER) -> INTEGER
	+(INTEGER, INTEGER) -> INTEGER
	+(BIGINT) -> BIGINT
	+(BIGINT, BIGINT) -> BIGINT
	+(HUGEINT) -> HUGEINT
	+(HUGEINT, HUGEINT) -> HUGEINT
	+(FLOAT) -> FLOAT
	+(FLOAT, FLOAT) -> FLOAT
	+(DOUBLE) -> DOUBLE
	+(DOUBLE, DOUBLE) -> DOUBLE
	+(DECIMAL) -> DECIMAL
	+(DECIMAL, DECIMAL) -> DECIMAL
	+(UTINYINT) -> UTINYINT
	+(UTINYINT, UTINYINT) -> UTINYINT
	+(USMALLINT) -> USMALLINT
	+(USMALLINT, USMALLINT) -> USMALLINT
	+(UINTEGER) -> UINTEGER
	+(UINTEGER, UINTEGER) -> UINTEGER
	+(UBIGINT) -> UBIGINT
	+(UBIGINT, UBIGINT) -> UBIGINT
	+(DATE, INTEGER) -> DATE
	+(INTEGER, DATE) -> DATE
	+(INTERVAL, INTERVAL) -> INTERVAL
	+(DATE, INTERVAL) -> DATE
	+(INTERVAL, DATE) -> DATE
	+(TIME, INTERVAL) -> TIME
	+(INTERVAL, TIME) -> TIME
	+(TIMESTAMP, INTERVAL) -> TIMESTAMP
	+(INTERVAL, TIMESTAMP) -> TIMESTAMP
	+(TIME, DATE) -> TIMESTAMP
	+(DATE, TIME) -> TIMESTAMP
	+(ANY[], ANY[]) -> ANY[]

statement error
SELECT -'hello'
----
Binder Error: No function matches the given name and argument types '-(VARCHAR)'. You might need to add explicit type casts.
	Candidate functions:
	-(TINYINT) -> TINYINT
	-(TINYINT, TINYINT) -> TINYINT
	-(SMALLINT) -> SMALLINT
	-(SMALLINT, SMALLINT) -> SMALLINT
	-(INTEGER) -> INTEGER
	-(INTEGER, INTEGER) -> INTEGER
	-(BIGINT) -> BIGINT
	-(BIGINT, BIGINT) -> BIGINT
	-(HUGEINT) -> HUGEINT
	-(HUGEINT, HUGEINT) -> HUGEINT
	-(FLOAT) -> FLOAT
	-(FLOAT, FLOAT) -> FLOAT
	-(DOUBLE) -> DOUBLE
	-(DOUBLE, DOUBLE) -> DOUBLE
	-(DECIMAL) -> DECIMAL
	-(DECIMAL, DECIMAL) -> DECIMAL
	-(UTINYINT) -> UTINYINT
	-(UTINYINT, UTINYINT) -> UTINYINT
	-(USMALLINT) -> USMALLINT
	-(USMALLINT, USMALLINT) -> USMALLINT
	-(UINTEGER) -> UINTEGER
	-(UINTEGER, UINTEGER) -> UINTEGER
	-(UBIGINT) -> UBIGINT
	-(UBIGINT, UBIGINT) -> UBIGINT
	-(DATE, DATE) -> BIGINT
	-(DATE, INTEGER) -> DATE
	-(TIMESTAMP, TIMESTAMP) -> INTERVAL
	-(INTERVAL, INTERVAL) -> INTERVAL
	-(DATE, INTERVAL) -> DATE
	-(TIME, INTERVAL) -> TIME
	-(TIMESTAMP, INTERVAL) -> TIMESTAMP
	-(INTERVAL) -> INTERVAL

# cannot apply these to a date either
statement ok
CREATE TABLE dates(d DATE)

statement ok
INSERT INTO dates VALUES ('1992-02-02')

statement error
SELECT +d FROM dates
----
PLACEHOLDER_ERROR_MESSAGE2113

statement error
SELECT -d FROM dates
----
PLACEHOLDER_ERROR_MESSAGE2112

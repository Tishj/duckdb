# name: test/sql/function/time/test_date_part.test
# description: DATE_PART test
# group: [time]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE times(d TIME, s VARCHAR);

statement ok
INSERT INTO times VALUES ('00:01:20', 'hour'), ('20:08:10.998', 'minute'), ('20:08:10.33', 'second'),
('20:08:10.001', 'millisecond');

# test date_part with different combinations of constant/non-constant columns
query I
SELECT date_part(NULL::VARCHAR, NULL::TIME) FROM times;
----
NULL
NULL
NULL
NULL

query I
SELECT date_part(s, NULL::TIME) FROM times;
----
NULL
NULL
NULL
NULL

# times
query I
SELECT date_part(NULL, d) FROM times;
----
NULL
NULL
NULL
NULL

query I
SELECT date_part(s, TIME '14:28:50.447') FROM times;
----
14
28
50
50447

query I
SELECT date_part('hour', d) FROM times;
----
0
20
20
20

query I
SELECT date_part(s, d) FROM times;
----
0
8
10
10001

foreach datepart timezone timezone_hour timezone_minute

query I
select date_part('${datepart}', time '10:00:00');
----
0

endloop

# time gives errors for date-only parts
statement error
SELECT era(i) FROM times
----
Binder Error: Referenced column "i" not found in FROM clause!
Candidate bindings: "times.d", "times.s"

statement error
SELECT year(i) FROM times
----
Binder Error: Referenced column "i" not found in FROM clause!
Candidate bindings: "times.d", "times.s"

statement error
SELECT month(i) FROM times
----
Binder Error: Referenced column "i" not found in FROM clause!
Candidate bindings: "times.d", "times.s"

statement error
SELECT day(i) FROM times
----
Binder Error: Referenced column "i" not found in FROM clause!
Candidate bindings: "times.d", "times.s"

statement error
SELECT decade(i) FROM times
----
Binder Error: Referenced column "i" not found in FROM clause!
Candidate bindings: "times.d", "times.s"

statement error
SELECT century(i) FROM times
----
Binder Error: Referenced column "i" not found in FROM clause!
Candidate bindings: "times.d", "times.s"

statement error
SELECT millennium(i) FROM times
----
Binder Error: Referenced column "i" not found in FROM clause!
Candidate bindings: "times.d", "times.s"

statement error
SELECT quarter(i) FROM times
----
Binder Error: Referenced column "i" not found in FROM clause!
Candidate bindings: "times.d", "times.s"

statement error
SELECT dayofweek(i) FROM times
----
Binder Error: Referenced column "i" not found in FROM clause!
Candidate bindings: "times.d", "times.s"

statement error
SELECT isodow(i) FROM times
----
Binder Error: Referenced column "i" not found in FROM clause!
Candidate bindings: "times.d", "times.s"

statement error
SELECT dayofyear(i) FROM times
----
Binder Error: Referenced column "i" not found in FROM clause!
Candidate bindings: "times.d", "times.s"

statement error
SELECT week(i) FROM times
----
Binder Error: Referenced column "i" not found in FROM clause!
Candidate bindings: "times.d", "times.s"

statement error
SELECT yearweek(i) FROM times
----
Binder Error: Referenced column "i" not found in FROM clause!
Candidate bindings: "times.d", "times.s"

statement error
select extract(dow from time '10:00:00');
----
Binder Error: No function matches the given name and argument types 'dayofweek(TIME)'. You might need to add explicit type casts.
	Candidate functions:
	dayofweek(DATE) -> BIGINT
	dayofweek(TIMESTAMP) -> BIGINT
	dayofweek(INTERVAL) -> BIGINT

statement error
select extract(doy from time '10:00:00');
----
Binder Error: No function matches the given name and argument types 'dayofyear(TIME)'. You might need to add explicit type casts.
	Candidate functions:
	dayofyear(DATE) -> BIGINT
	dayofyear(TIMESTAMP) -> BIGINT
	dayofyear(INTERVAL) -> BIGINT

statement error
select extract(yearweek from time '10:00:00');
----
Binder Error: No function matches the given name and argument types 'yearweek(TIME)'. You might need to add explicit type casts.
	Candidate functions:
	yearweek(DATE) -> BIGINT
	yearweek(TIMESTAMP) -> BIGINT
	yearweek(INTERVAL) -> BIGINT

statement error
select extract(century from time '10:00:00');
----
Binder Error: No function matches the given name and argument types 'century(TIME)'. You might need to add explicit type casts.
	Candidate functions:
	century(DATE) -> BIGINT
	century(TIMESTAMP) -> BIGINT
	century(INTERVAL) -> BIGINT

statement error
SELECT era(i) FROM times
----
Binder Error: Referenced column "i" not found in FROM clause!
Candidate bindings: "times.d", "times.s"

statement error
select extract(era from time '10:00:00');
----
Not implemented Error: "time" units "era" not recognized

statement error
select date_part('era', time '10:00:00');
----
Not implemented Error: "time" units "era" not recognized

statement error
select extract(julian from time '10:00:00');
----
PLACEHOLDER_ERROR_MESSAGE2052

statement error
select date_part('julian', time '10:00:00');
----
PLACEHOLDER_ERROR_MESSAGE2051

# Correctness: Compare date_part against function value
foreach partcode hour minute second millisecond microsecond epoch

query III
SELECT * FROM (
	SELECT d, DATE_PART('${partcode}', d) AS p, ${partcode}(d) AS f
	FROM times
) tbl
WHERE p <> f;
----

endloop

#
# Structs
#

# Correctness: Compare against scalar extract
foreach partcode hour minute second millisecond microsecond epoch timezone timezone_hour timezone_minute

query III
SELECT d, DATE_PART('${partcode}', d) AS p, DATE_PART(['${partcode}'], d) AS st
FROM times
WHERE p <> st['${partcode}'];
----

endloop

# Time parts
query II
SELECT d, DATE_PART(['hour', 'minute', 'microsecond'], d) AS parts
FROM times
ORDER BY 1;
----
00:01:20	{'hour': 0, 'minute': 1, 'microsecond': 20000000}
20:08:10.001	{'hour': 20, 'minute': 8, 'microsecond': 10001000}
20:08:10.33	{'hour': 20, 'minute': 8, 'microsecond': 10330000}
20:08:10.998	{'hour': 20, 'minute': 8, 'microsecond': 10998000}

# Miscellaneous parts
query II
SELECT d, DATE_PART(['epoch', 'second', 'timezone', 'timezone_hour', 'timezone_minute'], d) AS parts
FROM times
ORDER BY 1;
----
00:01:20	{'epoch': 80.0, 'second': 20, 'timezone': 0, 'timezone_hour': 0, 'timezone_minute': 0}
20:08:10.001	{'epoch': 72490.001, 'second': 10, 'timezone': 0, 'timezone_hour': 0, 'timezone_minute': 0}
20:08:10.33	{'epoch': 72490.33, 'second': 10, 'timezone': 0, 'timezone_hour': 0, 'timezone_minute': 0}
20:08:10.998	{'epoch': 72490.998, 'second': 10, 'timezone': 0, 'timezone_hour': 0, 'timezone_minute': 0}

# Function-only parts
query II
SELECT d, epoch_ns(d) FROM times ORDER BY ALL;
----
00:01:20	80000000000
20:08:10.001	72490001000000
20:08:10.33	72490330000000
20:08:10.998	72490998000000

query II
SELECT d, epoch_us(d) FROM times ORDER BY ALL;
----
00:01:20	80000000
20:08:10.001	72490001000
20:08:10.33	72490330000
20:08:10.998	72490998000

query II
SELECT d, epoch_ms(d) FROM times ORDER BY ALL;
----
00:01:20	80000
20:08:10.001	72490001
20:08:10.33	72490330
20:08:10.998	72490998

# Invalid parts

foreach datepart year month day decade century millennium quarter dow isodow doy week isoyear yearweek era julian

statement error
SELECT d, DATE_PART(['${datepart}'], d) AS parts
FROM times
ORDER BY 1;
----
PLACEHOLDER_ERROR_MESSAGE2050

endloop

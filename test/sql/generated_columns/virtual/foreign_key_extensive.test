# name: test/sql/generated_columns/virtual/foreign_key_extensive.test
# description: Re-testing 'test_foreignkey.test' with generated columns mixed in
# group: [virtual]

statement ok
PRAGMA enable_verification

statement ok
CREATE TABLE album (
	gen_artistid AS (artistid),
	gen_albumname AS (albumname),
	artistid INTEGER,
	albumname TEXT,
	albumcover TEXT,
	UNIQUE (artistid, albumname)
);

statement ok
INSERT INTO album VALUES (1, 'A', 'A_cover'), (2, 'B', 'B_cover'), (3, 'C', 'C_cover'), (4, 'D', 'D_cover');

# The count of columns are primary keys must be equal with the count of columns are foreign keys
statement error
CREATE TABLE song(songid INTEGER, songartist INTEGER, songalbum TEXT, songname TEXT, FOREIGN KEY(songartist, songalbum) REFERENCES album(artistid));
----
Parser Error: The number of referencing and referenced columns for foreign keys must be the same

statement error
CREATE TABLE song(songid INTEGER, songartist INTEGER, songalbum TEXT, songname TEXT, FOREIGN KEY(songalbum) REFERENCES album(artistid, albumname));
----
Parser Error: The number of referencing and referenced columns for foreign keys must be the same

statement error
CREATE TABLE song(songid INTEGER, songartist INTEGER, songalbum TEXT, songname TEXT, FOREIGN KEY(songartist, songalbum) REFERENCES albumlist(artistid, albumname));
----
Catalog Error: Table with name albumlist does not exist!
Did you mean "album"?

statement error
CREATE TABLE song(songid INTEGER, songartist INTEGER, songalbum TEXT, songname TEXT, FOREIGN KEY(songartist, songalbum) REFERENCES album(artistid, album_name));
----
Binder Error: Failed to create foreign key: referenced table "album" does not have a column named "album_name"

statement error
CREATE TABLE song(songid INTEGER, songartist INTEGER, songalbum TEXT, songname TEXT, FOREIGN KEY(songartist, song_album) REFERENCES album(artistid, albumname));
----
Binder Error: column "song_album" named in key does not exist

statement ok
CREATE TABLE song(songid INTEGER, songartist INTEGER, songalbum TEXT, songname TEXT, FOREIGN KEY(songartist, songalbum) REFERENCES album(artistid, albumname));

# Any row that is inserted into the table with the foreign key must exist in the table with the primary key (constraint)
statement error
INSERT INTO song VALUES (11, 1, 'A', 'A_song'), (12, 2, 'E', 'B_song'), (13, 3, 'C', 'C_song');
----
Constraint Error: Violates foreign key constraint because key "artistid: 2, albumname: E" does not exist in the referenced table

statement error
INSERT INTO song VALUES (11, 1, 'A', 'A_song'), (12, 5, 'D', 'B_song'), (13, 3, 'C', 'C_song');
----
Constraint Error: Violates foreign key constraint because key "artistid: 5, albumname: D" does not exist in the referenced table

statement ok
INSERT INTO song VALUES (11, 1, 'A', 'A_song'), (12, 2, 'B', 'B_song'), (13, 3, 'C', 'C_song');

statement ok
DELETE FROM album WHERE albumname='D';

query ITITT
SELECT * FROM album;
----
1	A	1	A	A_cover	
2	B	2	B	B_cover	
3	C	3	C	C_cover

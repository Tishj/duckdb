# name: test/sql/generated_columns/virtual/lambda_expressions.test
# group: [virtual]

statement ok
pragma enable_verification;

# Correct expression
statement ok
CREATE TABLE lambda_tbl1 (
	nums INTEGER[],
	evens AS (
		list_filter(nums, x -> x%2=0)
	)
)

# Lhs not present in rhs ('x' does not exist)
statement error
CREATE TABLE lambda_tbl2 (
	nums INTEGER[],
	evens AS (
		list_filter(nums, b -> x%2=0)
	)
)

# Column referenced does not exist
statement error
CREATE TABLE lambda_tbl3 (
	nums INTEGER[],
	evens AS (
		list_filter(not_nums, x -> x%2=0)
	)
)

statement ok
insert into lambda_tbl1 VALUES ([5,4,6,2,7,8]);

query II
select * from lambda_tbl1;
----
[5, 4, 6, 2, 7, 8]	[4, 6, 2, 8]

# 'evens' is referenced, but aliased to 'odd'
query I
select odd from lambda_tbl1 as tbl(evens,odd)
----
[4, 6, 2, 8]

# Test ambiguity resolution within the generated expression
query II
select tbl.evens, (select 1 as evens) as evens from lambda_tbl1 as tbl;
----
[4, 6, 2, 8]	1

# Introduce another columns called 'nums' that should not be referenced
query II
select lambda_tbl1.evens, (select 1) as nums from lambda_tbl1;
----
[4, 6, 2, 8]	1

# Aliasing table names
query III
select nums, evens, (select * from range(5) lambda_tbl1) from lambda_tbl1 tbl(evens, nums);
----
[4, 6, 2, 8]	[5, 4, 6, 2, 7, 8]	0

# name: test/sql/types/nested/list/test_list_reverse.test
# description: Test reversing the order of the elements of a list
# group: [list]

statement ok
PRAGMA enable_verification

query I
SELECT LIST_REVERSE(NULL)
----
NULL

query I
SELECT LIST_REVERSE(ARRAY[])
----
[]

query I
SELECT LIST_REVERSE(ARRAY[NULL])
----
[NULL]

query I
SELECT LIST_REVERSE(ARRAY[1, 42, 2])
----
[2, 42, 1]

query I
SELECT LIST_REVERSE(ARRAY[1, 42, NULL, 2])
----
[2, NULL, 42, 1]

query I
SELECT LIST_REVERSE(LIST_REVERSE(ARRAY[1, 3, 3, 42, 117, 69, NULL]))
----
[1, 3, 3, 42, 117, 69, NULL]

query I
SELECT LIST_REVERSE (ARRAY[[1, 2 ,42], [3, 4]])
----
[[3, 4], [1, 2, 42]]

query I
prepare q1 as select list_reverse(?);
execute q1([5, 42, 3]);
----
[3, 42, 5]

query I
create table tbl_big as select range(5000) as list;
select list_sort((list), 'desc') == list_reverse(list) from tbl_big;
----
true

statement ok
CREATE TABLE tbl (id INTEGER, list INTEGER[]);

statement ok
INSERT INTO tbl VALUES (1, [NULL, 3, 117, 42, 1]), (2, NULL), (3, [1, 8, 9]), (4, NULL), (5, NULL), (6, [NULL]);

query II
SELECT id, list_reverse(list) FROM tbl ORDER BY id;
----
1	[1, 42, 117, 3, NULL]
2	NULL
3	[9, 8, 1]
4	NULL
5	NULL
6	[NULL]

statement ok
CREATE TABLE tbl2 (id INTEGER, list INTEGER[]);

statement ok
INSERT INTO tbl2 VALUES (1, [1, 2, 3]), (1, [4, 5, 6]), (3, [7, 8, 9]);

query II
SELECT id, list_reverse(list) FROM tbl2 ORDER BY id;
----
1	[3, 2, 1]
1	[6, 5, 4]
3	[9, 8, 7]

query IIIIIIII
select list_reverse(list_reverse(columns(['int_array', 'varchar_array', 'nested_int_array', 'array_of_structs', 'timestamp_array', 'double_array', 'date_array', 'timestamptz_array']))) == columns(['int_array', 'varchar_array', 'nested_int_array', 'array_of_structs', 'timestamp_array', 'double_array', 'date_array', 'timestamptz_array']) from test_all_types();
----
true	true	true	true	true	true	true	true
true	true	true	true	true	true	true	true
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL

query I nosort q1
select true from test_vector_types(null::int[], false);
----

query I nosort q1
select list_sort((list), 'desc') == list from (select list_reverse(test_vector) as list from test_vector_types(null::int[], false));
----

query I nosort q1
select list_sort((list), 'desc') == list from (select list_reverse(test_vector) as list from test_vector_types(null::int[], true));
----

query I
SELECT c == list_reverse(list_reverse(c)) 
FROM test_vector_types(NULL::INT[], false) t(c) WHERE c IS NOT NULL;
----
true

statement ok
select list_reverse(columns(['int_array', 'varchar_array', 'nested_int_array', 'array_of_structs', 'timestamp_array', 'double_array', 'date_array', 'timestamptz_array'])) from test_all_types();

statement error
SELECT LIST_REVERSE()

statement error
SELECT LIST_REVERSE(42)

statement error
SELECT LIST_REVERSE (ARRAY[1, 3, 2, 42, 117,, NULL])

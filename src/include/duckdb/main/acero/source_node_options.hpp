#pragma once

#include "duckdb/main/acero/dataset/exec_node_options.hpp"
#include "duckdb/main/acero/dataset/dataset.hpp"
#include "duckdb/main/acero/dataset/scan_options.hpp"
#include "duckdb/main/acero/compute/expression.hpp"
#include "duckdb/main/acero/schema.hpp"

namespace duckdb {
namespace ac {

// NOTE: this is modified from the original, because it's using c++17 features and async functionality
class SourceNodeOptions : public arrow::dataset::ExecNodeOptions {
	using base = arrow::dataset::ExecNodeOptions;

public:
	/// Create an instance from values
	SourceNodeOptions(std::shared_ptr<arrow::Schema> output_schema, std::shared_ptr<arrow::dataset::Dataset> generator)
	    : base(base::OptionType::SOURCE_NODE), output_schema(std::move(output_schema)),
	      generator(std::move(generator)) {
	}

	/// \brief the schema for batches that will be generated by this source
	std::shared_ptr<arrow::Schema> output_schema;
	std::shared_ptr<arrow::dataset::Dataset> generator;
};

} // namespace ac
} // namespace duckdb

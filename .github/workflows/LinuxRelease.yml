name: LinuxRelease
on:
  workflow_dispatch:
  repository_dispatch:
  push:
    branches:
      - '**'
      - '!main'
      - '!feature'
    tags:
      - '**'
    paths-ignore:
      - '**.md'
      - 'tools/**'
      - '!tools/odbc/**'
      - '!tools/shell/**'
      - '.github/patches/duckdb-wasm/**'
      - '.github/workflows/**'
      - '!.github/workflows/LinuxRelease.yml'

  pull_request:
    types: [opened, reopened, ready_for_review]
    paths-ignore:
      - '**.md'
      - 'tools/**'
      - '!tools/odbc/**'
      - '!tools/shell/**'
      - '.github/patches/duckdb-wasm/**'
      - '.github/workflows/**'
      - '!.github/workflows/LinuxRelease.yml'


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' || github.sha }}
  cancel-in-progress: true

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
 linux-release-64:
    # Builds binaries for linux_amd64_gcc4
    name: Linux (x64)
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    env:
      EXTENSION_CONFIGS: '${GITHUB_WORKSPACE}/.github/config/bundled_extensions.cmake'
      ENABLE_EXTENSION_AUTOLOADING: 1
      ENABLE_EXTENSION_AUTOINSTALL: 1
      GEN: ninja
      BUILD_BENCHMARK: 1
      BUILD_ODBC: 1
      DEBUG_STACKTRACE: 1
      FORCE_WARN_UNUSED: 1
      DUCKDB_RUN_PARALLEL_CSV_TESTS: 1

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: ./.github/actions/manylinux_2014_setup
      with:
        ninja-build: 1
        ccache: 1
        odbc: 1
        python_alias: 1

    - name: Install pytest
      run: |
        python3 -m pip install pytest

    - name: Build
      shell: bash
      run: make

    - name: Print platform
      shell: bash
      run: ./build/release/duckdb -c "PRAGMA platform;"

    - name: CPU information
      shell: bash
      run: lscpu

    - name: Test
      shell: bash
      if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
      run: |
        make
        python3 scripts/run_tests_one_by_one.py build/release/test/unittest "*" --time_execution --order lex --start-offset 3380

    - name: Tools Tests
      shell: bash
      if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
      run: |
        python3 -m pytest tools/shell/tests --shell-binary build/release/duckdb

    - name: Examples
      shell: bash
      if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
      run: |
        (cd examples/embedded-c; make)
        (cd examples/embedded-c++; make)
        build/release/benchmark/benchmark_runner benchmark/tpch/sf1/q01.benchmark
        build/release/duckdb -c "COPY (SELECT 42) TO '/dev/stdout' (FORMAT PARQUET)" | cat

    - name: Deploy
      shell: bash
      run: |
        python3 scripts/amalgamation.py
        zip -j duckdb_cli-linux-amd64.zip build/release/duckdb
        zip -j libduckdb-linux-amd64.zip build/release/src/libduckdb*.* src/amalgamation/duckdb.hpp src/include/duckdb.h
        zip -j libduckdb-src.zip src/amalgamation/duckdb.hpp src/amalgamation/duckdb.cpp src/include/duckdb.h
        zip -j duckdb_odbc-linux-amd64.zip build/release/tools/odbc/libduckdb_odbc.so tools/odbc/linux_setup/unixodbc_setup.sh
        python3 scripts/asset-upload-gha.py libduckdb-src.zip libduckdb-linux-amd64.zip duckdb_cli-linux-amd64.zip duckdb_odbc-linux-amd64.zip

    - uses: actions/upload-artifact@v3
      with:
        name: duckdb-binaries-linux
        path: |
          libduckdb-linux-amd64.zip
          duckdb_cli-linux-amd64.zip
          duckdb_odbc-linux-amd64.zip
